// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serialize/protodata/test1.proto

package protodata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Test1_EDEMO int32

const (
	Test1_UNKNOWN Test1_EDEMO = 0
	Test1_X       Test1_EDEMO = 17
	Test1_Y       Test1_EDEMO = 18
)

var Test1_EDEMO_name = map[int32]string{
	0:  "UNKNOWN",
	17: "X",
	18: "Y",
}
var Test1_EDEMO_value = map[string]int32{
	"UNKNOWN": 0,
	"X":       17,
	"Y":       18,
}

func (x Test1_EDEMO) String() string {
	return proto.EnumName(Test1_EDEMO_name, int32(x))
}
func (Test1_EDEMO) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type Test1 struct {
	Users map[string]int32 `protobuf:"bytes,1,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Page  int64            `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Names []string         `protobuf:"bytes,3,rep,name=names" json:"names,omitempty"`
	Ed    Test1_EDEMO      `protobuf:"varint,4,opt,name=ed,enum=protodata.Test1_EDEMO" json:"ed,omitempty"`
}

func (m *Test1) Reset()                    { *m = Test1{} }
func (m *Test1) String() string            { return proto.CompactTextString(m) }
func (*Test1) ProtoMessage()               {}
func (*Test1) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Test1) GetUsers() map[string]int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Test1) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Test1) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *Test1) GetEd() Test1_EDEMO {
	if m != nil {
		return m.Ed
	}
	return Test1_UNKNOWN
}

type Test2 struct {
	Page  int32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *Test2) Reset()                    { *m = Test2{} }
func (m *Test2) String() string            { return proto.CompactTextString(m) }
func (*Test2) ProtoMessage()               {}
func (*Test2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Test2) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Test2) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*Test1)(nil), "protodata.Test1")
	proto.RegisterType((*Test2)(nil), "protodata.Test2")
	proto.RegisterEnum("protodata.Test1_EDEMO", Test1_EDEMO_name, Test1_EDEMO_value)
}

func init() { proto.RegisterFile("serialize/protodata/test1.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x4d, 0xbb, 0x51, 0x3a, 0x0b, 0x52, 0x07, 0x91, 0xa0, 0x07, 0x43, 0x0f, 0x92, 0x53,
	0x97, 0xd6, 0xcb, 0xe2, 0xd9, 0x9e, 0xc4, 0x2e, 0x04, 0x17, 0xf5, 0x18, 0xe9, 0x20, 0xc5, 0xba,
	0xbb, 0x34, 0x59, 0x61, 0xfd, 0xc9, 0xfe, 0x0a, 0x49, 0x02, 0xf5, 0xe0, 0x29, 0xf3, 0x32, 0x8f,
	0xef, 0xbd, 0x81, 0x6b, 0x4b, 0x63, 0x6f, 0x86, 0xfe, 0x9b, 0x16, 0xbb, 0x71, 0xeb, 0xb6, 0x9d,
	0x71, 0x66, 0xe1, 0xc8, 0xba, 0xaa, 0x0c, 0x1a, 0xb3, 0xe9, 0xbb, 0xf8, 0x61, 0xc0, 0x9f, 0xfc,
	0x0a, 0x2b, 0xe0, 0x7b, 0x4b, 0xa3, 0x15, 0x4c, 0xa6, 0x6a, 0x5e, 0x5f, 0x95, 0x93, 0xa9, 0x0c,
	0x86, 0x72, 0xed, 0xb7, 0xcd, 0xc6, 0x8d, 0x07, 0x1d, 0x9d, 0x88, 0x30, 0xdb, 0x99, 0x77, 0x12,
	0x89, 0x64, 0x2a, 0xd5, 0x61, 0xc6, 0x73, 0xe0, 0x1b, 0xf3, 0x49, 0x56, 0xa4, 0x32, 0x55, 0x99,
	0x8e, 0x02, 0x6f, 0x20, 0xa1, 0x4e, 0xcc, 0x24, 0x53, 0xa7, 0xf5, 0xc5, 0x3f, 0x72, 0x73, 0xdf,
	0x3c, 0xae, 0x74, 0x42, 0xdd, 0xe5, 0x12, 0xe0, 0x2f, 0x06, 0x73, 0x48, 0x3f, 0xe8, 0x20, 0x98,
	0x64, 0x2a, 0xd3, 0x7e, 0xf4, 0xf4, 0x2f, 0x33, 0xec, 0x63, 0x24, 0xd7, 0x51, 0xdc, 0x25, 0x4b,
	0x56, 0x14, 0xc0, 0x03, 0x06, 0xe7, 0x70, 0xb2, 0x6e, 0x1f, 0xda, 0xd5, 0x73, 0x9b, 0x1f, 0x21,
	0x07, 0xf6, 0x92, 0x9f, 0xf9, 0xe7, 0x35, 0xc7, 0xa2, 0x8a, 0xb7, 0xd6, 0x53, 0x71, 0x16, 0x28,
	0x53, 0x71, 0xd7, 0xbb, 0x21, 0xa2, 0x33, 0x1d, 0xc5, 0xdb, 0x71, 0xe8, 0x7a, 0xfb, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xa5, 0x40, 0xd2, 0xd2, 0x54, 0x01, 0x00, 0x00,
}
